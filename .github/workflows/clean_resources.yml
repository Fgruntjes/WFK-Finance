name: Clean resources

on:
    pull_request:
        types: ['closed']

jobs:
    deploy_slug:
        runs-on: ubuntu-latest
        steps:
            - uses: rlespinasse/github-slug-action@v4
            - id: environment
              run: echo "var=${{ github.event.pull_request.number }}-merge" >> $GITHUB_OUTPUT
            - id: tag
              run: echo "var=${{ env.GITHUB_SHA_SHORT }}" >> $GITHUB_OUTPUT
        outputs:
            environment: ${{ steps.environment.outputs.var }}
            tag: ${{ steps.tag.outputs.var }}

    destroy_backend:
        runs-on: ubuntu-latest
        timeout-minutes: 30
        if: ${{ needs.deploy_slug.outputs.environment != 'main' && needs.deploy_slug.outputs.environment != 'test' && needs.deploy_slug.outputs.environment != 'alpha' }}
        needs: 'deploy_slug'
        permissions:
            contents: read
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v1
              with:
                  creds: '{"clientId":"${{ vars.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ vars.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ vars.ARM_TENANT_ID }}"}'
            - uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: '~1.6.3'
                  terraform_wrapper: false
            - run: ./cleanup.sh
              env:
                  APP_VERSION: ${{ needs.deploy_slug.outputs.tag }}
                  APP_ENVIRONMENT: ${{ needs.deploy_slug.outputs.environment }}
                  ARM_LOCATION: ${{ vars.ARM_LOCATION }}
                  ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
                  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
                  ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
                  ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
                  AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
                  AUTH0_CLIENT_ID: ${{ vars.AUTH0_CLIENT_ID }}
                  AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
                  NORDIGEN_SECRET_ID: ${{ vars.NORDIGEN_SECRET_ID }}
                  NORDIGEN_SECRET_KEY: ${{ secrets.NORDIGEN_SECRET_KEY }}

    destroy_frontend:
        runs-on: ubuntu-latest
        timeout-minutes: 5
        if: ${{ needs.deploy_slug.outputs.environment != 'main' && needs.deploy_slug.outputs.environment != 'test' && needs.deploy_slug.outputs.environment != 'alpha' }}
        needs: 'deploy_slug'
        permissions:
            deployments: write
        environment:
            name: ${{ needs.deploy_slug.outputs.environment }}
        steps:
            - run: echo "::notice file=.github/workflows/clean_resources.yml,line=61,title=Destroy frontend not implemented::@see https://github.com/cloudflare/pages-action/issues/47"
