name: Deploy
on:
    push:
        branches:
        - main
        - beta
        - alpha

permissions:
    contents: read
    id-token: write
    deployments: write

jobs:
    build_backend:
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v3
        -   uses: docker/setup-buildx-action@v2
        -   uses: docker/metadata-action@v4
            id: docker_meta
            with:
                images: ${{ vars.GOOGLE_REGION }}-docker.pkg.dev/${{ vars.GOOGLE_PROJECT_SLUG }}/docker/${{ github.ref_name }}/backend
                tags: |
                    type=ref,prefix=,suffix=,event=branch
                    type=sha
        -   uses: google-github-actions/auth@v1
            id: google_auth
            with:
                workload_identity_provider: ${{ vars.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
                service_account: ${{ vars.GOOGLE_SERVICE_ACCOUNT_EMAIL }}
                token_format: access_token
        -   uses: docker/login-action@v2
            with:
                registry: ${{ vars.GOOGLE_REGION }}-docker.pkg.dev
                username: oauth2accesstoken
                password: ${{ steps.google_auth.outputs.access_token }}
        -   uses: docker/build-push-action@v4
            with:
                context: App.Backend/
                tags: ${{ steps.docker_meta.outputs.tags }}
                labels: ${{ steps.docker_meta.outputs.labels }}
                cache-from: type=gha
                cache-to: type=gha,mode=max
                push: true
                # @see https://github.com/docker/buildx/issues/1533
                provenance: false

    build_frontend:
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v3

    deploy:
        runs-on: ubuntu-latest
        needs: 
        -   build_backend
        -   build_frontend
        steps:
        -   uses: actions/checkout@v3
        -   uses: actions/setup-dotnet@v3
            with:
                dotnet-version: 3.1.x
        -   uses: google-github-actions/auth@v1
            with:
                workload_identity_provider: ${{ vars.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
                service_account: ${{ vars.GOOGLE_SERVICE_ACCOUNT_EMAIL }}
                token_format: access_token
        -   uses: docker/metadata-action@v4
            id: docker_meta
            with:
                images: ${{ vars.GOOGLE_REGION }}-docker.pkg.dev/${{ vars.GOOGLE_PROJECT_SLUG }}/docker/${{ github.ref_name }}/backend
                tags: type=sha
        -   uses: pulumi/actions@v4
        -   run: ./deploy.sh
            timeout-minutes: 10
            env:
                PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
                APP_ENVIRONMENT: ${{ github.ref_name }}
                APP_VERSION: ${{ steps.docker_meta.outputs.tags }}
                GOOGLE_PROJECT_SLUG: ${{ vars.GOOGLE_PROJECT_SLUG }}
                GOOGLE_REGION: ${{ vars.GOOGLE_REGION }}
                MONGODB_PROJECT_ID: ${{ vars.MONGODB_PROJECT_ID }}
                MONGODB_ATLAS_PUBLIC_KEY: ${{ vars.MONGODB_ATLAS_PUBLIC_KEY }}
                MONGODB_ATLAS_PRIVATE_KEY: ${{ secrets.MONGODB_ATLAS_PRIVATE_KEY }}
                AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
                AUTH0_CLIENT_ID: ${{ vars.AUTH0_CLIENT_ID }}
                AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
                NORDIGEN_SECRET_ID: ${{ vars.NORDIGEN_SECRET_ID }}
                NORDIGEN_SECRET_KEY: ${{ secrets.NORDIGEN_SECRET_KEY }}