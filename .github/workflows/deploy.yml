name: Deploy
on:
    workflow_call:
        inputs:
            environment:
                required: true
                type: string
            version:
                required: true
                type: string
        outputs:
            app_settings_json:
                value: ${{ jobs.deploy_backend.outputs.app_settings_json }}

jobs:
    build_backend:
        runs-on: ubuntu-latest
        timeout-minutes: 10
        permissions:
            contents: read
        strategy:
            fail-fast: true
            matrix:
                target:
                    - App.Backend
                    - App.Data.Migrations
        steps:
            - uses: actions/checkout@v3
            - uses: docker/setup-buildx-action@v2
            - uses: crazy-max/ghaction-github-runtime@v3
            - uses: azure/login@v1
              with:
                  creds: '{"clientId":"${{ vars.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ vars.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ vars.ARM_TENANT_ID }}"}'
            - run: ./build.sh ${{ matrix.target }}
              env:
                  APP_VERSION: '${{ inputs.version }}'
                  APP_ENVIRONMENT: '${{ inputs.environment }}'

    deploy_backend:
        runs-on: ubuntu-latest
        timeout-minutes: 60
        permissions:
            contents: read
        needs: build_backend
        outputs:
            app_api_url: ${{ steps.deploy.outputs.app_api_url }}
            app_settings_json: ${{ steps.deploy.outputs.app_settings_json }}
            frontend_auth0_client_id: ${{ steps.deploy.outputs.frontend_auth0_client_id }}
            backend_auth0_audience: ${{ steps.deploy.outputs.backend_auth0_audience }}
            frontend_sentry_dsn: ${{ steps.deploy.outputs.frontend_sentry_dsn }}
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v1
              with:
                  creds: '{"clientId":"${{ vars.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ vars.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ vars.ARM_TENANT_ID }}"}'
            - uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: '~1.6.3'
                  terraform_wrapper: false
            - run: ./deploy.sh
              id: deploy
              env:
                  APP_VERSION: '${{ inputs.version }}'
                  APP_ENVIRONMENT: '${{ inputs.environment }}'
                  GH_ENCRYPT_KEY: '${{ secrets.GH_ENCRYPT_KEY }}'
                  ARM_LOCATION: '${{ vars.ARM_LOCATION }}'
                  ARM_CLIENT_ID: '${{ vars.ARM_CLIENT_ID }}'
                  ARM_CLIENT_SECRET: '${{ secrets.ARM_CLIENT_SECRET }}'
                  ARM_SUBSCRIPTION_ID: '${{ vars.ARM_SUBSCRIPTION_ID }}'
                  ARM_TENANT_ID: '${{ vars.ARM_TENANT_ID }}'
                  AUTH0_DOMAIN: '${{ vars.AUTH0_DOMAIN }}'
                  AUTH0_CLIENT_ID: '${{ vars.AUTH0_CLIENT_ID }}'
                  AUTH0_CLIENT_SECRET: '${{ secrets.AUTH0_CLIENT_SECRET }}'
                  NORDIGEN_SECRET_ID: '${{ vars.NORDIGEN_SECRET_ID }}'
                  NORDIGEN_SECRET_KEY: '${{ secrets.NORDIGEN_SECRET_KEY }}'
                  SENTRY_ORGANISATION: '${{ vars.SENTRY_ORGANISATION }}'
                  SENTRY_TOKEN: '${{ secrets.SENTRY_TOKEN }}'
            - uses: actions/upload-artifact@v3
              if: failure()
              with:
                  name: deploy_logs
                  path: terraform/*.log
                  retention-days: 7

    build_frontend:
        runs-on: ubuntu-latest
        timeout-minutes: 10
        needs: deploy_backend
        permissions:
            contents: read
        steps:
            - uses: actions/checkout@v3
            - uses: pnpm/action-setup@v2
              with:
                  version: 8
                  run_install: false
                  package_json_file: frontend/package.json
            - uses: actions/setup-node@v4
              with:
                  node-version-file: frontend/package.json
                  cache: 'pnpm'
                  cache-dependency-path: frontend/pnpm-lock.yaml
            - run: ./build.sh frontend
              env:
                  APP_VERSION: ${{ inputs.version }}
                  APP_ENVIRONMENT: ${{ inputs.environment }}
                  APP_API_URI: ${{ needs.deploy_backend.outputs.app_api_url }}
                  APP_BASE: ${{ github.event.repository.name }}
                  AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
                  AUTH0_CLIENT_ID: ${{ needs.deploy_backend.outputs.frontend_auth0_client_id }}
                  AUTH0_AUDIENCE: ${{ needs.deploy_backend.outputs.backend_auth0_audience }}
                  SENTRY_DSN: ${{ needs.deploy_backend.outputs.frontend_sentry_dsn }}

            - uses: actions/upload-artifact@v3
              with:
                  name: frontend
                  path: frontend/build

    deploy_frontend:
        runs-on: ubuntu-latest
        needs: build_frontend
        outputs:
            app_url: https://${{ inputs.environment }}.${{ vars.APP_PROJECT_SLUG }}.pages.dev/
        permissions:
            deployments: write
        environment:
            name: ${{ inputs.environment }}
            url: https://${{ inputs.environment }}.${{ vars.APP_PROJECT_SLUG }}.pages.dev/
        steps:
            - uses: actions/download-artifact@v3
              with:
                  name: frontend
                  path: frontend/build
            - uses: cloudflare/pages-action@v1
              with:
                  apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  accountId: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
                  projectName: ${{ vars.APP_PROJECT_SLUG }}
                  directory: frontend/build
                  gitHubToken: ${{ secrets.GITHUB_TOKEN }}
                  branch: ${{ inputs.environment }}
                  wranglerVersion: '3'
