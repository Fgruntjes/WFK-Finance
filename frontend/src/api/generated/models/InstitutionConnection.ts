/* tslint:disable */
/* eslint-disable */
/**
 * App.Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Account } from './Account';
import {
    AccountFromJSON,
    AccountFromJSONTyped,
    AccountToJSON,
} from './Account';

/**
 * 
 * @export
 * @interface InstitutionConnection
 */
export interface InstitutionConnection {
    /**
     * 
     * @type {string}
     * @memberof InstitutionConnection
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof InstitutionConnection
     */
    institutionId: string;
    /**
     * 
     * @type {string}
     * @memberof InstitutionConnection
     */
    connectUrl: string;
    /**
     * 
     * @type {Array<Account>}
     * @memberof InstitutionConnection
     */
    accounts: Array<Account>;
}

/**
 * Check if a given object implements the InstitutionConnection interface.
 */
export function instanceOfInstitutionConnection(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "institutionId" in value;
    isInstance = isInstance && "connectUrl" in value;
    isInstance = isInstance && "accounts" in value;

    return isInstance;
}

export function InstitutionConnectionFromJSON(json: any): InstitutionConnection {
    return InstitutionConnectionFromJSONTyped(json, false);
}

export function InstitutionConnectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstitutionConnection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'institutionId': json['institutionId'],
        'connectUrl': json['connectUrl'],
        'accounts': ((json['accounts'] as Array<any>).map(AccountFromJSON)),
    };
}

export function InstitutionConnectionToJSON(value?: InstitutionConnection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'institutionId': value.institutionId,
        'connectUrl': value.connectUrl,
        'accounts': ((value.accounts as Array<any>).map(AccountToJSON)),
    };
}

